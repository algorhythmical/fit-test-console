:root {
    font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
    line-height: 1.5;
    font-weight: 400;

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    /*transition: background-color 200ms ease-in-out, border-color 200ms ease-in-out, box-shadow 200ms ease-in-out;*/
}

.app-border-container {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 0.2rem;
}

.app-border-container.red-border {
    background-color: red;
}

.app-container {
    position: relative;
    top: 0;
    height: 100%;
    overflow: hidden;
}

.full-screen-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 10;
    /*background-color: light-dark(white, black);*/
    /*align-content: center;*/
    display: block;
    overflow-y: scroll;
}

.qrcode-container {
    display: block;
    aspect-ratio: 1;
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);
    /*padding: 1rem;*/
    background: lightgray;
    container-type: inline-size;
    /*height: 100%;*/
}

.qrcode-container > svg {
    display: block; /* svg is "inline" by default */
    height: calc(min(100cqh, 100cqw) - 2em); /* reset height */
    width: calc(min(100cqh, 100cqw) - 2em); /* reset width */
}

a {
    font-weight: 500;
    color: #646cff;
    text-decoration: inherit;
}

a:hover {
    color: #535bf2;
}

body {
    margin: 0;
    display: flex;
    min-width: 320px;
    min-height: 100vh;
    background-color: light-dark(white, black);
}

h1 {
    font-size: 3.2em;
    line-height: 1.1;
}

button {
    border-radius: 8px;
    border: 1px solid gray;
    /*padding: 0.6em 1.2em;*/
    /*font-size: 1em;*/
    /*font-weight: 500;*/
    /*font-family: inherit;*/
    /*background-color: #1a1a1a;*/
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    transition: border-color 0.25s, background-color 1s ease-in-out;
}

button:hover {
    border-color: #646cff;
    transition: background-color 1s ease-in-out;
}

.icon-button {
    transition: background-color 1s ease-in-out;

    &.start {
        background-color: lightgreen;
    }

    &.stop {
        background-color: pink;
    }

    &.disabled {
        opacity: 0.5;
        background-color: lightgray;
    }
}

button.icon-button {
    gap: 0.2em
}

/*button:focus,*/
/*button:focus-visible {*/
/*  outline: 4px auto -webkit-focus-ring-color;*/
/*}*/
button:disabled {
    cursor: not-allowed;
}

.resizer {
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    width: 5px;
    background: rgba(0, 0, 0, 0.5);
    cursor: col-resize;
    user-select: none;
    touch-action: none;
}

.resizer.isResizing {
    background: blue;
    opacity: 1;
}

@media (hover: hover) {
    .resizer {
        opacity: 0;
    }

    *:hover > .resizer {
        opacity: 1;
    }
}

@media (prefers-color-scheme: light) {
    :root {
        color: darkslateblue;
        background-color: white;
    }

    a:hover {
        color: cornflowerblue;
    }

    button {
        background-color: whitesmoke;
    }
}


div.editable-table-cell {
    display: inline-block;
    outline: none;
}

.svg-container {
    /* match svg's height to the line height when next to text to maximize the svg's size*/
    height: 1.5em;
    line-height: 1.5em;
    display: flex;
    gap: 0.2em;

    &.icon-button {
        height: 2em;
        line-height: 2em;
    }
}

.svg-container svg {
    /* override the height and width of the svg element to fill the available height */
    height: inherit;
    width: auto;
}

.selector-value:hover {
}

.cancel-hover-control {
    visibility: hidden;
}

.cancel-hover-control:hover {
    visibility: visible;
}

.selector-value:hover ~ .cancel-hover-control {
    visibility: visible;
}

.selector-input:hover ~ .cancel-hover-control {
    visibility: visible;
}

textarea.table-cell-input {
    border: none;
    display: block;
    overflow-y: hidden;
}

td.results {
    text-align: end;
}

.table-cell {
    padding-inline: 0.3em;
}

.efficiency {
    font-size: smaller;
}

.pass {
    background-color: green;
    color: white;
}

.fail {
    background-color: darkred;
    color: white;
}

.result-cell {
    width: 100%;
    box-sizing: border-box;

    &.low-fit-score {
        background-color: darkorange;
        /*color: whitesmoke;*/
    }

    &.moderate-fit-score {
        background-color: yellowgreen;
        /*color: black;*/
    }

    &.high-fit-score {
        background-color: green;
        /*color: whitesmoke*/
    }

    &.very-high-fit-score {
        background-color: darkgreen;
        /*color: whitesmoke*/
    }

    &.aborted {
        background-color: light-dark(lightgrey, #3f3f3f);
        text-align: center;
    }
}


.info-box {
    display: inline-block;
    text-align: start;
    vertical-align: top;
}

.info-box-compact {
    display: inline-block;
    text-align: start;
    vertical-align: top;
    padding-top: 0;
    padding-bottom: 0.5em; /* this should be 0.5em which seems to be the offset of the label in a fieldset to make sure we don't accidentally introduce scrollbars to our container */
    padding-inline-start: 0.2em;
    padding-inline-end: 0.4em;
}

/*for elapsed time widget*/
.idle {
    background-color: light-dark(lightgrey, dimgray);
}

.on-time {
    background-color: light-dark(lightgreen, darkgreen);
}

.over-time {
    background-color: light-dark(pink, firebrick);
    /*animation: pulse-background-2 1s infinite ease-in-out alternate;*/
    /*, slide-gradient 30s infinite ease-in-out alternate;*/
    /*background-image: repeating-linear-gradient(*/
    /*        -60deg,*/
    /*        red calc(var(--offset)),*/
    /*        pink calc(var(--offset) + 30%),*/
    /*        pink calc(var(--offset) + 50%),*/
    /*        red calc(var(--offset) + 80%)*/
    /*);*/
}

@property --offset {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
}

@keyframes slide-gradient {
    from {
        --offset: -1000%
    }
    to {
        --offset: 1000%
    }
}

.smooth-background-change {
    transition: background-color 1s ease-in-out;
}

.number-field {
    text-align: end;
    font-variant-numeric: tabular-nums;
}

.no-wrap {
    text-wrap: nowrap;
}

.pre {
    white-space-collapse: preserve;
    font-family: "Courier New", monospace;
}

.console-8020 {
    /*max line length seems to be 25 chars*/
    width: 25ch;
    height: inherit;
    white-space-collapse: preserve;
    font-family: monospace;
    text-wrap: nowrap;

    &:empty:before {
        content: "no data";
    }
}

.inline-flex {
    display: inline-flex;
}

@keyframes pulse-background {
    from {
        filter: hue-rotate(-10deg);
    }
    to {
        filter: hue-rotate(10deg);
    }
}


@keyframes pulse-background-2 {
    from {
        filter: brightness(100%)
    }
    to {
        filter: brightness(400%);
    }
}

.flex-wrap {
    flex-wrap: wrap;
}

.blue-bg {
    background-color: light-dark(aliceblue, blue);
}

.nav-link-active {
    font-weight: bold;
    font-size: larger;
    /*font-style: italic;*/
    /*padding-inline: 0.2em;*/
}

.nav-link-pending {
    background-color: lightblue;
}

.nav-link-hidden {
    display: none;
}

#nav-bar {
    container-type: inline-size;
    container-name: nav-bar-container;
}

.nav-bar {
    display: flex;
    justify-content: space-between;
    height: 100%;
    box-sizing: border-box;
    background-color: light-dark(whitesmoke, black);
}

.icon-text {
    transition: background-color 1s ease-in-out;
}

@container root-container (width <= 55em) {
    .icon-text .wide-display {
        display: none;
    }

    .icon-text .narrow-display {
        display: inline-flex;
    }
}

@container root-container (width > 55em) {
    .icon-text .wide-display {
        display: block;
    }

    .icon-text .narrow-display {
        display: none;
    }
}

td input.simple-mask-selector {
    border-width: 0;
}

.simple-mask-selector {
    width: inherit
}


.test-instructions-container {
    opacity: 1;
    background-color: inherit;
    width: 100%;
    /*z-index: 3;*/
    display: flex;
    flex-direction: column;
}

.test-in-progress {
    flex-grow: 1;
    height: inherit;
}

.test-idle {
    position: relative;
}

.no-focus-border {
    &:focus {
        outline: none;
    }
}

.no-dim-disabled {
    &:disabled {
        opacity: 1;
        color: black;
    }
}

.thin-border {
    border: 1px solid;
    padding-inline: 0.2em;
    box-shadow: 2px 2px 2px;
    margin-inline-end: 3px;
    margin-block-end: 3px;
}

.thin-border-2 {
    border: 1px solid;
    box-shadow: 2px 2px 2px;
    box-sizing: border-box;
    margin-inline-end: 3px;
    margin-block-end: 3px;
}

.participant-info {
    /*box-sizing: border-box;*/
    /*max-width: 100%;*/
    min-width: 0;
    width: auto;
    @container root-container (width > 500px) {
        max-width: 32vw;
    }
}

.nav-icon {
    aspect-ratio: 1;
    height: 1.5em;
    width: auto;
}
